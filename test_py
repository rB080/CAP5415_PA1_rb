from utils import *
import cv2
import os

x, ddx = gaussian_mask_1d(5, 5//2, 1.0)
print(x)
print(ddx)

img = load_img(os.path.join("assets", "119082.jpg"))
print(img.shape)

Ix, Iy = directional_convolve(img, x)
Ixx, Iyy = directional_convolve(
    Ix, ddx, 'x'), directional_convolve(Iy, ddx, 'y')


print(Ix.shape, Iy.shape)
print(Ixx.shape, Iyy.shape)

M, theta = polarise(Ixx, Iyy, renormalize=True)

print(M.shape, theta.shape)

save_img(os.path.join("tests", "img.jpg"), img)
save_img(os.path.join("tests", "Ix.jpg"), Ix)
save_img(os.path.join("tests", "Iy.jpg"), Iy)
save_img(os.path.join("tests", "Ixx.jpg"), Ixx)
save_img(os.path.join("tests", "Iyy.jpg"), Iyy)
save_img(os.path.join("tests", "M.jpg"), M)


M_nms = non_max_suppression(M, theta)


save_img(os.path.join("tests", "M_nms.jpg"), M_nms)

M_final = hysteresis_thresh(M_nms.copy(), 0.1, 0.294, 0.35)


save_img(os.path.join("tests", "M_final.jpg"), M_final)

M_conn = connected_comps(M_final, 8)
save_img(os.path.join("tests", "M_conn.jpg"), M_conn, normalized=False)


GT = load_img(os.path.join("assets", "119082_gt.jpg"))
M_conn = np.array(M_conn/255.0)
print(evaluate(M_conn, GT))
print(evaluate(M_conn, GT, "l2"))
